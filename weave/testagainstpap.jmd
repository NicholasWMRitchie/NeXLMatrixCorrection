### Testing Matrix Correction Algorithms
Testing matrix correction algorithms XPP and CitZAF against the Pouchou and Pichoir k-ratio database.

```julia
using CSV
using DataFrames
using NeXLMatrixCorrection

function mapline(elm, index)
  trss = Dict(0=>kalpha, 2=>kbeta, 12=>lalpha, 31=>lbeta, 72=>malpha, 69=>mbeta)
  trs=trss[index]
  return [ brightest(characteristic(elm, trs)) ]
end

pap = CSV.read(joinpath(@__DIR__,"papkratios.csv"), DataFrame, header=3, skipto=4)
xppres, czres, rivres = Union{Float64,Missing}[], Union{Float64,Missing}[], Union{Float64,Missing}[]
for r in eachrow(pap)
    a, b = elements[r.A], elements[r.B]
    e0, θ  = 1.0e3*r.E0, deg2rad(r.TOA)
    std, unk = pure(a), material("Unknown",Dict(a=>r.WgtFracA, b=>1.0-r.WgtFracA))
    kk, xrays = r.kA, mapline(a, r.Line)
  try
    algs = zafcorrection(XPP, ReedFluorescence, NullCoating, unk, std, xrays, e0)
    push!(xppres, k(algs..., θ, θ)/kk)
  catch
    push!(xppres, missing)
  end
  try
    algs = zafcorrection(CitZAF, ReedFluorescence, NullCoating, unk, std, xrays, e0)
    push!(czres, k(algs..., θ, θ)/kk)
  catch
    push!(czres, missing)
  end
  try
    algs = zafcorrection(Riveros1993, ReedFluorescence, NullCoating, unk, std, xrays, e0)
    push!(rivres, k(algs..., θ, θ)/kk)
  catch
    push!(rivres, missing)
  end
end
insertcols!(pap, ncol(pap)+1, :XPP=>xppres)
insertcols!(pap, ncol(pap)+1, :CitZAF=>czres)
insertcols!(pap, ncol(pap)+1, :Riveros=>rivres)
display(pap)
```

##### XPP
Let's visualize this.
```julia; fig_width=8; fig_height=4; fig_ext=".svg";
using Gadfly
plot(pap, x=:XPP, y=:XPP, Stat.histogram(bincount=50), Geom.bar, Guide.title("XPP"))
```

##### CitZAF
```julia; fig_width=8; fig_height=4; fig_ext=".svg";
plot(pap, x=:CitZAF, y=:CitZAF, Stat.histogram(bincount=50), Geom.bar, Guide.title("CitZAF"))
```

##### Riveros
```julia; fig_width=8; fig_height=4; fig_ext=".svg";
plot(pap, x=:Riveros, y=:Riveros, Stat.histogram(bincount=200), Geom.bar, Guide.title("Riveros 1993"), Coord.cartesian(xmin=0.8, xmax=1.2))
```

##### Summary Statistics
```julia
describe(pap[:,end-2:end], :mean, :std, :min, :q25, :median, :q75, :max)
```
