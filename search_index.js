var documenterSearchIndex = {"docs":
[{"location":"coatingthickness/#Measuring-the-Coating-Thickness","page":"Coating Thickness","title":"Measuring the Coating Thickness","text":"","category":"section"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"Nicholas W. M. Ritchie, 13-Apr-2020; updated 11-May-2020","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"Often it is necessary to add a thin conductive coating to the surface of non-conductive samples to minimize the accumulation of electrical charges on or near the surface.  When these charges accumulate they can deflect and distort the beam and reduce the effective beam energy.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"While the coatings are typically a thin as practical to produce the desired conductivity, the material in the coating can influence the transport of electrons and X-rays in the sample.  This is particularly true for soft X-rays like the K lines of Be, B, C, N, O and F or the L- or M-lines of similar energies.  The most common coating material is amorphous carbon deposited from a thread or hot filament although sputtered metal coatings like gold or gold-palladium are favored by some.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"A common strategy for dealing with coatings has two parts. First, the thickness of the coating is measured using a oscillating quartz crystal film thickness monitor.  Second, the sample and the references are coated simultaneously to ensure similar coating thicknesses.  The thickness of the coating is then compensated in the matrix correction algorithm - usually as an additional absorption correction term.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"An alternative strategy is to measure the thickness of the coating using the X-ray signal generated by the coating. This requires providing a standard spectrum for a coating element and measuring the k-ratio of this element in the sample and the other standards.  It is necessary that the measured coating element not be present in the material. For example, it is possible to measure a thin oxidization layer on aluminum using an oxygen standard like alumina (Al₂O₃) or magnesia (MgO).","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"While it is possible to measure the coating element using WDS, it is trivial using EDS.  This information is always available in the measured and standard spectra.  All that is necessary is to provide a bulk standard for the coating element in the fitting process.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"A simple strategy for calculating the k-ratio of a ultra-thin coating on a substrate uses the bulk ϕ(ρz) correction for the coating element in the substrate material to estimate the effective k-ratio.  This requires knowledge of the composition of the substrate.  In the case of standards, this is available.  For unknowns, an estimated composition can be updated in the iteration algorithm.  A root-finding algorithm can then be used to solve for the thickness that produces the measured k-ratio.","category":"page"},{"location":"coatingthickness/#The-Calculation","page":"Coating Thickness","title":"The Calculation","text":"","category":"section"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"First, load 'NeXLSpectrum' to read and fit the spectra and 'NeXLMatrixCorrection' for k-ratio related calculations.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"using NeXLSpectrum\nusing NeXLMatrixCorrection\nusing DataFrames # To tabulate the k-ratios\nusing Gadfly  # To plot the fit residual","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"Then read in the spectra - SiO₂ as the measured material, Si, Al₂O₃ and C as the references.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"path=joinpath(@__DIR__, \"spectra\")\nsio2=loadspectrum(joinpath(path,\"SiO2_StdC_15kV7p5nA130kHz_300s.msa\"))\nsi =loadspectrum(joinpath(path,\"Si_StdC_15kV7p5nA130kHz_132kHz24DT_100s.msa\"))\nal2o3 = loadspectrum(joinpath(path,\"Al2O3_StdC_15kV7p5nA130kHz_300s.msa\"))\nc = loadspectrum(joinpath(path,\"C_StdC_15kV7p5nA130kHz_48kHz9DT_100s.msa\"))\ne0, toa = sameproperty([sio2,si,al2o3,c], :BeamEnergy), sameproperty([sio2,si,al2o3,c], :TakeOffAngle)\nplot(sio2, si, al2o3, c, klms=[n\"Si\", n\"Al\", n\"O\", n\"C\" ], xmax=2.5e3)","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"(Image: )","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"Build a detector model with details from the spectrum and an estimate of the resolution and low-level discriminator channel.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"det = BasicEDS(length(sio2), energy(1, sio2), channelwidth(1, sio2), 128.0, 120)\nfilt = buildfilter(det)","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"NeXLSpectrum.VariableWidthFilter[NeXLSpectrum.BasicEDS(4096, E[ch] = -482.8\n3378 + 5.003319999999974⋅ch, 128.0 eV @ Mn K-L3, 120, Dict{Shell,Element}(S\nhell[M] => Element(Barium),Shell[N] => Element(Plutonium),Shell[K] => Eleme\nnt(Beryllium),Shell[L] => Element(Scandium)))]","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"Create fitting filters for each element we require from the references.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"refdata = (\n  ( al2o3, n\"O\", mat\"Al2O3\" ),\n  ( si, n\"Si\", mat\"Si\" ),\n  ( c, n\"C\", mat\"C\" ),\n)\nfrs = mapreduce(ref->filterreference(filt, ref...), append!, refdata)","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"3-element Array{NeXLSpectrum.FilteredReference,1}:\n Reference[O K-L3 + 1 other]\n Reference[Si K-L3 + 2 others]\n Reference[C K-L2]","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"Now with the fitting filters and the measured SiO₂ spectrum we can perform the fit of Si, O and C to SiO₂.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"res = fit(sio2, filt, frs)\ndisplay(plot(res))","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"(Image: )","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"NeXLUncertainties.asa(DataFrame, kratios(res))","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"3×12 DataFrame. Omitted printing of 6 columns\n│ Row │ Element │ Z     │ Lines              │ E0unk   │ E0std   │ θunk    \n │\n│     │ String  │ Int64 │ Array{CharXRay,1}  │ Float64 │ Float64 │ Float64 \n │\n├─────┼─────────┼───────┼────────────────────┼─────────┼─────────┼─────────\n─┤\n│ 1   │ O       │ 8     │ O K-L3 + 1 other   │ 15000.0 │ 15000.0 │ 0.698132\n │\n│ 2   │ C       │ 6     │ C K-L2             │ 15000.0 │ 15000.0 │ 0.698132\n │\n│ 3   │ Si      │ 14    │ Si K-L3 + 2 others │ 15000.0 │ 15000.0 │ 0.698132\n │","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"From the k-ratios, we can determine the mass-thickness of the carbon layer on the SiO₂ sample.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"k = value(findlabel(res, n\"C K-L2\"),res)\nρz = massthickness(XPP, mat\"SiO2\", mat\"C\", n\"C K-L2\", sio2[:BeamEnergy], sio2[:TakeOffAngle], k)\nprint(\"The thickness is $(round(ρz*1.0e7/density(pure(n\"C\")); sigdigits=3)) nm.\")  # Convert g/cm² to nm of amorphous carbon (1.9 g/cm³)","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"The thickness is 24.4 nm.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"ρz = massthickness(CitZAF, mat\"SiO2\", mat\"C\", n\"C K-L2\", sio2[:BeamEnergy], sio2[:TakeOffAngle], k)\nprint(\"The thickness is $(round(ρz*1.0e7/density(pure(n\"C\")); sigdigits=3)) nm.\")  # Convert g/cm² to nm of amorphous carbon (1.9 g/cm³)","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"The thickness is 17.1 nm.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"Finally, we correct the measured k-ratios for Si and O to account for the carbon coating.","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"krs = NeXLMatrixCorrection.correctkratios(kratios(res), mat\"C\", ρz)\nNeXLUncertainties.asa(DataFrame, krs)","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"3×12 DataFrame. Omitted printing of 6 columns\n│ Row │ Element │ Z     │ Lines              │ E0unk   │ E0std   │ θunk    \n │\n│     │ String  │ Int64 │ Array{CharXRay,1}  │ Float64 │ Float64 │ Float64 \n │\n├─────┼─────────┼───────┼────────────────────┼─────────┼─────────┼─────────\n─┤\n│ 1   │ O       │ 8     │ O K-L3 + 1 other   │ 15000.0 │ 15000.0 │ 0.698132\n │\n│ 2   │ C       │ 6     │ C K-L2             │ 15000.0 │ 15000.0 │ 0.698132\n │\n│ 3   │ Si      │ 14    │ Si K-L3 + 2 others │ 15000.0 │ 15000.0 │ 0.698132\n │","category":"page"},{"location":"coatingthickness/","page":"Coating Thickness","title":"Coating Thickness","text":"Usually, the coating compensation is handled in the matrix correction algorithm through providing coating data.","category":"page"},{"location":"testagainstheinrich/#Comparing-Matrix-Correction-Algorithms","page":"Compare to Heinrich","title":"Comparing Matrix Correction Algorithms","text":"","category":"section"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"Nicholas W. M. Ritchie 15-May-2020 Added Riveros 12-Jun-2020","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"Testing matrix correction algorithms XPP and CitZAF against the k-ratio database published by Heinrich in \"X-Ray Spectroscopy in Electron Beam Instruments\" (1995)","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"Look to the end of the document for various interesting plots.","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"using CSV\nusing DataFrames\nusing NeXLMatrixCorrection\n\nheinrich =DataFrame!(CSV.File(joinpath(@__DIR__,\"Heinrich1995kratios.csv\"), header=18, skipto=19))\ntrss = Dict(\"Kα\"=>kalpha, \"Kβ\"=>kbeta, \"Lα\"=>lalpha, \"Lβ\"=>lbeta, \"Mα\"=>malpha, \"Mβ\"=>mbeta)\ntrsnames = Dict(1=>\"Kα\", 2=>\"Kβ\", 3=>\"Lα\", 4=>\"Lβ\", 8=>\"Mα\", 9=>\"Mβ\")\nheinrich.Z1 = map(z->elements[z].symbol, heinrich.Z1)\nheinrich.Z2 = map(z->elements[z].symbol, heinrich.Z2)\nheinrich.Line = map(l->trsnames[l], heinrich.Line)\nxppres, czres, rivres = Union{Float64,Missing}[], Union{Float64,Missing}[], Union{Float64,Missing}[]\nfor r in eachrow(heinrich)\n    a, b = parse(Element,r.Z1), parse(Element,r.Z2)\n    e0, θ  = convert(Float64,r.E0), deg2rad(r.TOA)\n    std, unk = pure(a), material(\"Unknown\",Dict(a=>r.C1, b=>1.0-r.C1))\n    kk, lines = r.Kexp, [ brightest(characteristic(a, trss[r.Line])), ]\n    try\n      algs = zafcorrection(XPP, ReedFluorescence, NullCoating, unk, std, lines, e0)\n      push!(xppres, k(algs..., θ, θ)/kk)\n    catch c\n      @show c\n      push!(xppres, missing)\n    end\n    try\n      algs = zafcorrection(CitZAF, ReedFluorescence, NullCoating, unk, std, lines, e0)\n      push!(czres, k(algs..., θ, θ)/kk)\n    catch c\n      @show c\n      push!(czres, missing)\n    end\n    try\n      algs = zafcorrection(Riveros1993, ReedFluorescence, NullCoating, unk, std, lines, e0)\n      push!(rivres, k(algs..., θ, θ)/kk)\n    catch c\n      @show c\n      push!(rivres, missing)\n    end\nend\ninsertcols!(heinrich, ncol(heinrich)+1, :XPP=>xppres)\ninsertcols!(heinrich, ncol(heinrich)+1, :CitZAF=>czres)\ninsertcols!(heinrich, ncol(heinrich)+1, :Riveros=>rivres)\n#display(show(dropmissing!(heinrich)))","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"# Items 857 to 860 see to be in error.\nfilter!(r->!(r.Item in 857:860), sort!(heinrich,:XPP))\n# The columns XPP and CitZAF represent the measured k-ratio over the computed k-ratio for these algorithms.\n# Display the table sorted by XPP\ndisplay(heinrich)","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"1821×13 DataFrame. Omitted printing of 5 columns\n│ Row  │ Item  │ Line   │ Z1     │ Z2     │ C1      │ E0    │ Ec    │ TOA  \n   │\n│      │ Int64 │ String │ String │ String │ Float64 │ Int64 │ Int64 │ Float\n64 │\n├──────┼───────┼────────┼────────┼────────┼─────────┼───────┼───────┼──────\n───┤\n│ 1    │ 136   │ Kα     │ B      │ Zr     │ 0.1789  │ 30000 │ 188   │ 40.0 \n   │\n│ 2    │ 135   │ Kα     │ B      │ Zr     │ 0.1789  │ 25000 │ 188   │ 40.0 \n   │\n│ 3    │ 134   │ Kα     │ B      │ Zr     │ 0.1789  │ 20000 │ 188   │ 40.0 \n   │\n│ 4    │ 133   │ Kα     │ B      │ Zr     │ 0.1789  │ 15000 │ 188   │ 40.0 \n   │\n│ 5    │ 132   │ Kα     │ B      │ Zr     │ 0.1789  │ 12000 │ 188   │ 40.0 \n   │\n│ 6    │ 131   │ Kα     │ B      │ Zr     │ 0.1789  │ 10000 │ 188   │ 40.0 \n   │\n│ 7    │ 130   │ Kα     │ B      │ Zr     │ 0.1789  │ 8000  │ 188   │ 40.0 \n   │\n⋮\n│ 1814 │ 188   │ Kα     │ B      │ U      │ 0.1537  │ 10000 │ 188   │ 40.0 \n   │\n│ 1815 │ 861   │ Kα     │ Cu     │ Zn     │ 5.65    │ 10100 │ 8980  │ 40.0 \n   │\n│ 1816 │ 124   │ Kα     │ B      │ Ni     │ 0.144   │ 8000  │ 188   │ 40.0 \n   │\n│ 1817 │ 189   │ Kα     │ B      │ U      │ 0.1537  │ 12000 │ 188   │ 40.0 \n   │\n│ 1818 │ 190   │ Kα     │ B      │ U      │ 0.1537  │ 15000 │ 188   │ 40.0 \n   │\n│ 1819 │ 165   │ Kα     │ B      │ Nd     │ 0.31    │ 10000 │ 188   │ 40.0 \n   │\n│ 1820 │ 328   │ Kα     │ Al     │ Fe     │ 0.1     │ 2000  │ 1559  │ 75.0 \n   │\n│ 1821 │ 166   │ Kα     │ B      │ Nd     │ 0.31    │ 15000 │ 188   │ 40.0 \n   │","category":"page"},{"location":"testagainstheinrich/#XPP","page":"Compare to Heinrich","title":"XPP","text":"","category":"section"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"Let's visualize this.","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"using Gadfly\nplotargs = (  Stat.histogram(bincount=50), Geom.bar,  Guide.xlabel(\"kMeas/kCalc\"), Guide.ylabel(\"Count\"), Coord.cartesian(xmin=0.0, xmax=2.0) )\n\nplot(heinrich, x=:XPP, plotargs..., Guide.title(\"XPP\"))","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"(Image: )","category":"page"},{"location":"testagainstheinrich/#CitZAF","page":"Compare to Heinrich","title":"CitZAF","text":"","category":"section"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"plot(heinrich, x=:CitZAF, plotargs..., Guide.title(\"CitZAF\"))","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"(Image: )","category":"page"},{"location":"testagainstheinrich/#Riveros","page":"Compare to Heinrich","title":"Riveros","text":"","category":"section"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"plot(heinrich, x=:Riveros, plotargs..., Guide.title(\"Riveros\"))","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"(Image: )","category":"page"},{"location":"testagainstheinrich/#Summary-Statistics","page":"Compare to Heinrich","title":"Summary Statistics","text":"","category":"section"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"describe(heinrich[:,end-2:end], :mean, :std, :min, :q25, :median, :q75, :max)","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"3×8 DataFrame. Omitted printing of 2 columns\n│ Row │ variable │ mean    │ std      │ min      │ q25      │ median   │\n│     │ Symbol   │ Float64 │ Float64  │ Float64  │ Float64  │ Float64  │\n├─────┼──────────┼─────────┼──────────┼──────────┼──────────┼──────────┤\n│ 1   │ XPP      │ 1.02407 │ 0.11594  │ 0.416139 │ 0.988486 │ 1.00252  │\n│ 2   │ CitZAF   │ 1.0077  │ 0.144751 │ 0.438618 │ 0.957969 │ 0.993088 │\n│ 3   │ Riveros  │ 1.06529 │ 0.247911 │ 0.0      │ 1.00233  │ 1.02406  │","category":"page"},{"location":"testagainstheinrich/#Low-Z-Performance","page":"Compare to Heinrich","title":"Low Z Performance","text":"","category":"section"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"Let's look at the relative performance for low Z elements (z<8).  Sadly, there is no O data :-(","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"lowZ = filter(r->z(parse(Element,r.Z1))<8, heinrich)\ndescribe(lowZ[:,end-2:end], :mean, :std, :min, :q25, :median, :q75, :max)","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"3×8 DataFrame. Omitted printing of 2 columns\n│ Row │ variable │ mean    │ std      │ min      │ q25      │ median  │\n│     │ Symbol   │ Float64 │ Float64  │ Float64  │ Float64  │ Float64 │\n├─────┼──────────┼─────────┼──────────┼──────────┼──────────┼─────────┤\n│ 1   │ XPP      │ 1.14396 │ 0.289023 │ 0.416139 │ 0.986049 │ 1.05951 │\n│ 2   │ CitZAF   │ 1.20833 │ 0.341309 │ 0.438618 │ 0.991009 │ 1.13112 │\n│ 3   │ Riveros  │ 1.25253 │ 0.655883 │ 0.0      │ 1.02788  │ 1.16089 │","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"display(plot(lowZ, x=:CitZAF, plotargs..., Guide.title(\"CitZAF\")))","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"(Image: )","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"display(plot(lowZ, x=:XPP, plotargs..., Guide.title(\"XPP\")))","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"(Image: )","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"display(plot(lowZ, x=:Riveros, plotargs..., Guide.title(\"Riveros\")))","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"(Image: )","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"Let's find out which are the \"problem children\".","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"display(sort!(filter(r->abs(1.0-r.XPP)>0.2, lowZ),:XPP))","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"59×13 DataFrame. Omitted printing of 5 columns\n│ Row │ Item  │ Line   │ Z1     │ Z2     │ C1      │ E0    │ Ec    │ TOA   \n  │\n│     │ Int64 │ String │ String │ String │ Float64 │ Int64 │ Int64 │ Float6\n4 │\n├─────┼───────┼────────┼────────┼────────┼─────────┼───────┼───────┼───────\n──┤\n│ 1   │ 136   │ Kα     │ B      │ Zr     │ 0.1789  │ 30000 │ 188   │ 40.0  \n  │\n│ 2   │ 135   │ Kα     │ B      │ Zr     │ 0.1789  │ 25000 │ 188   │ 40.0  \n  │\n│ 3   │ 134   │ Kα     │ B      │ Zr     │ 0.1789  │ 20000 │ 188   │ 40.0  \n  │\n│ 4   │ 133   │ Kα     │ B      │ Zr     │ 0.1789  │ 15000 │ 188   │ 40.0  \n  │\n│ 5   │ 132   │ Kα     │ B      │ Zr     │ 0.1789  │ 12000 │ 188   │ 40.0  \n  │\n│ 6   │ 131   │ Kα     │ B      │ Zr     │ 0.1789  │ 10000 │ 188   │ 40.0  \n  │\n│ 7   │ 130   │ Kα     │ B      │ Zr     │ 0.1789  │ 8000  │ 188   │ 40.0  \n  │\n⋮\n│ 52  │ 125   │ Kα     │ B      │ Ni     │ 0.144   │ 10000 │ 188   │ 40.0  \n  │\n│ 53  │ 111   │ Kα     │ B      │ Ni     │ 0.0578  │ 12000 │ 188   │ 40.0  \n  │\n│ 54  │ 188   │ Kα     │ B      │ U      │ 0.1537  │ 10000 │ 188   │ 40.0  \n  │\n│ 55  │ 124   │ Kα     │ B      │ Ni     │ 0.144   │ 8000  │ 188   │ 40.0  \n  │\n│ 56  │ 189   │ Kα     │ B      │ U      │ 0.1537  │ 12000 │ 188   │ 40.0  \n  │\n│ 57  │ 190   │ Kα     │ B      │ U      │ 0.1537  │ 15000 │ 188   │ 40.0  \n  │\n│ 58  │ 165   │ Kα     │ B      │ Nd     │ 0.31    │ 10000 │ 188   │ 40.0  \n  │\n│ 59  │ 166   │ Kα     │ B      │ Nd     │ 0.31    │ 15000 │ 188   │ 40.0  \n  │","category":"page"},{"location":"testagainstheinrich/#Performance-by-Data-Source","page":"Compare to Heinrich","title":"Performance by Data Source","text":"","category":"section"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"Let's look at the relative performance by data source","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"vcat(map(org->describe(filter(r->r.Origin==org, heinrich)[:,end-2:end], :mean, :std, :min, :q25, :median, :q75, :max), 1:11)...)","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"33×8 DataFrame. Omitted printing of 2 columns\n│ Row │ variable │ mean     │ std       │ min      │ q25      │ median   │\n│     │ Symbol   │ Float64  │ Float64   │ Union…   │ Union…   │ Union…   │\n├─────┼──────────┼──────────┼───────────┼──────────┼──────────┼──────────┤\n│ 1   │ XPP      │ 1.06108  │ 0.197942  │ 0.416139 │ 0.988139 │ 1.00165  │\n│ 2   │ CitZAF   │ 1.09749  │ 0.247607  │ 0.438618 │ 0.988467 │ 1.02458  │\n│ 3   │ Riveros  │ 1.13373  │ 0.460387  │ 0.0      │ 1.02261  │ 1.04829  │\n│ 4   │ XPP      │ 1.0013   │ 0.0302697 │ 0.919383 │ 0.988511 │ 1.00496  │\n│ 5   │ CitZAF   │ 0.930553 │ 0.0886838 │ 0.773003 │ 0.850813 │ 0.963248 │\n│ 6   │ Riveros  │ 1.01054  │ 0.0278175 │ 0.930001 │ 1.00188  │ 1.00995  │\n│ 7   │ XPP      │ 1.02806  │ 0.0520892 │ 0.889167 │ 0.998981 │ 1.01122  │\n⋮\n│ 26  │ CitZAF   │ 0.996435 │ 0.0311259 │ 0.918866 │ 0.985224 │ 0.993082 │\n│ 27  │ Riveros  │ 1.06719  │ 0.0712832 │ 0.994109 │ 1.00628  │ 1.02026  │\n│ 28  │ XPP      │ NaN      │ NaN       │          │          │          │\n│ 29  │ CitZAF   │ NaN      │ NaN       │          │          │          │\n│ 30  │ Riveros  │ NaN      │ NaN       │          │          │          │\n│ 31  │ XPP      │ 0.998633 │ 0.0182596 │ 0.959832 │ 0.987556 │ 0.99676  │\n│ 32  │ CitZAF   │ 1.01093  │ 0.0235833 │ 0.957343 │ 0.994074 │ 1.00831  │\n│ 33  │ Riveros  │ 1.01996  │ 0.0170493 │ 0.997234 │ 1.00773  │ 1.01486  │","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"using Compose\norigins = Dict(\n  1 =>\"Bastin’s measurements of borides\",\n  2 => \"Goldstein et al. measurements\",\n  3 => \"J. Colby and D. K. Conley’s measurements\",\n  4 => \"NBS 1 measurements\",\n  5 => \"Pouchou’s compilation\",\n  6 => \"Sewell et al. compilation\",\n  7 => \"Bastin Data Basis\",\n  8 => \"NBS 2 measurements\",\n  9 => \"P. F. Hlava’s (Sandia) measurements\",\n  10 => \"Schreiber’s measurements\",\n  11 => \"Bastin compilation\" )\nset_default_graphic_size(10inch,6inch)\nfor origin in 1:11\n    df = filter(r->r.Origin==origin, heinrich)\n    if nrow(df)>0\n      display(vstack(\n        compose(context(), text(0.5, 0.5, origins[origin], hcenter, vcenter), font(\"Arial\"), fontsize(20pt)),\n        hstack(\n          plot(df, x=:XPP, plotargs..., Guide.title(\"XPP\")),\n          plot(df, x=:CitZAF, plotargs..., Guide.title(\"CitZAF\")),\n          plot(df, x=:Riveros, plotargs..., Guide.title(\"Riveros\"))\n          )))\n    end\nend","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"Let's look more closely at Paul's data as XPP shows an anomylous dual hump behavior while CitZAF doesn't.  Puzzling????","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"hlava = filter(r->r.Origin==9, heinrich)\nweird = sort!(filter(r->r.XPP>1.05, hlava), :XPP)\nnotweird = sort!(filter(r->r.XPP<=1.05, hlava), :XPP)\nhstack(\n  plot(weird, x=:XPP, plotargs..., Guide.title(\"Weird\")),\n  plot(notweird, x=:XPP, plotargs..., Guide.title(\"Less So\"))\n)","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"(Image: )","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"Compare with CitZAF","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"hstack(\n  plot(weird, x=:CitZAF, plotargs..., Guide.title(\"Weird\")),\n  plot(notweird, x=:CitZAF, plotargs..., Guide.title(\"Less So\"))\n)","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"(Image: )","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"Compare with Riveros","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"hstack(\n  plot(weird, x=:Riveros, plotargs..., Guide.title(\"Weird\")),\n  plot(notweird, x=:Riveros, plotargs..., Guide.title(\"Less So\"))\n)","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"(Image: )","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"They are all z=41 (Nb) in z=92 (U) at moderate to high E0","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"display(weird)","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"36×13 DataFrame. Omitted printing of 5 columns\n│ Row │ Item  │ Line   │ Z1     │ Z2     │ C1      │ E0    │ Ec    │ TOA   \n  │\n│     │ Int64 │ String │ String │ String │ Float64 │ Int64 │ Int64 │ Float6\n4 │\n├─────┼───────┼────────┼────────┼────────┼─────────┼───────┼───────┼───────\n──┤\n│ 1   │ 1098  │ Lα     │ Nb     │ U      │ 0.0189  │ 20000 │ 2371  │ 40.0  \n  │\n│ 2   │ 1097  │ Lα     │ Nb     │ U      │ 0.0189  │ 15000 │ 2371  │ 40.0  \n  │\n│ 3   │ 1105  │ Lα     │ Nb     │ U      │ 0.0406  │ 20000 │ 2371  │ 40.0  \n  │\n│ 4   │ 1091  │ Lα     │ Nb     │ U      │ 0.0132  │ 20000 │ 2371  │ 40.0  \n  │\n│ 5   │ 1119  │ Lα     │ Nb     │ U      │ 0.0741  │ 20000 │ 2371  │ 40.0  \n  │\n│ 6   │ 1126  │ Lα     │ Nb     │ U      │ 0.1286  │ 20000 │ 2371  │ 40.0  \n  │\n│ 7   │ 1102  │ Lα     │ Nb     │ U      │ 0.0189  │ 40000 │ 2371  │ 40.0  \n  │\n⋮\n│ 29  │ 1121  │ Lα     │ Nb     │ U      │ 0.0741  │ 30000 │ 2371  │ 40.0  \n  │\n│ 30  │ 1099  │ Lα     │ Nb     │ U      │ 0.0189  │ 25000 │ 2371  │ 40.0  \n  │\n│ 31  │ 1107  │ Lα     │ Nb     │ U      │ 0.0406  │ 30000 │ 2371  │ 40.0  \n  │\n│ 32  │ 1109  │ Lα     │ Nb     │ U      │ 0.0406  │ 40000 │ 2371  │ 40.0  \n  │\n│ 33  │ 1123  │ Lα     │ Nb     │ U      │ 0.0741  │ 40000 │ 2371  │ 40.0  \n  │\n│ 34  │ 1116  │ Lα     │ Nb     │ U      │ 0.0587  │ 40000 │ 2371  │ 40.0  \n  │\n│ 35  │ 1130  │ Lα     │ Nb     │ U      │ 0.1286  │ 40000 │ 2371  │ 40.0  \n  │\n│ 36  │ 1093  │ Lα     │ Nb     │ U      │ 0.0132  │ 30000 │ 2371  │ 40.0  \n  │","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"They are either z=41 (Nb) in z=92 (U) at low E0 or U in Nb.  What is up with Nb in XPP????","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"display(notweird)","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"48×13 DataFrame. Omitted printing of 5 columns\n│ Row │ Item  │ Line   │ Z1     │ Z2     │ C1      │ E0    │ Ec    │ TOA   \n  │\n│     │ Int64 │ String │ String │ String │ Float64 │ Int64 │ Int64 │ Float6\n4 │\n├─────┼───────┼────────┼────────┼────────┼─────────┼───────┼───────┼───────\n──┤\n│ 1   │ 1124  │ Lα     │ Nb     │ U      │ 0.1286  │ 10000 │ 2371  │ 40.0  \n  │\n│ 2   │ 1117  │ Lα     │ Nb     │ U      │ 0.0741  │ 10000 │ 2371  │ 40.0  \n  │\n│ 3   │ 1814  │ Mα     │ U      │ Nb     │ 0.9811  │ 25000 │ 3552  │ 40.0  \n  │\n│ 4   │ 1816  │ Mα     │ U      │ Nb     │ 0.9811  │ 40000 │ 3552  │ 40.0  \n  │\n│ 5   │ 1815  │ Mα     │ U      │ Nb     │ 0.9811  │ 35000 │ 3552  │ 40.0  \n  │\n│ 6   │ 1820  │ Mα     │ U      │ Nb     │ 0.9868  │ 25000 │ 3552  │ 40.0  \n  │\n│ 7   │ 1089  │ Lα     │ Nb     │ U      │ 0.0132  │ 10000 │ 2371  │ 40.0  \n  │\n⋮\n│ 41  │ 1788  │ Mα     │ U      │ Nb     │ 0.8714  │ 35000 │ 3552  │ 40.0  \n  │\n│ 42  │ 1785  │ Mα     │ U      │ Nb     │ 0.8714  │ 20000 │ 3552  │ 40.0  \n  │\n│ 43  │ 1110  │ Lα     │ Nb     │ U      │ 0.0587  │ 10000 │ 2371  │ 40.0  \n  │\n│ 44  │ 1804  │ Mα     │ U      │ Nb     │ 0.9594  │ 10000 │ 3552  │ 40.0  \n  │\n│ 45  │ 1791  │ Mα     │ U      │ Nb     │ 0.9259  │ 15000 │ 3552  │ 40.0  \n  │\n│ 46  │ 1784  │ Mα     │ U      │ Nb     │ 0.8714  │ 15000 │ 3552  │ 40.0  \n  │\n│ 47  │ 1797  │ Mα     │ U      │ Nb     │ 0.9413  │ 10000 │ 3552  │ 40.0  \n  │\n│ 48  │ 1783  │ Mα     │ U      │ Nb     │ 0.8714  │ 10000 │ 3552  │ 40.0  \n  │","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"What about other U?","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"uranium = filter(r->(r.Z1==\"U\") || (r.Z2==\"U\"), heinrich)\nhstack(\n  plot(uranium, x=:XPP, plotargs..., Guide.title(\"XPP\")),\n  plot(uranium, x=:CitZAF, plotargs..., Guide.title(\"CitZAF\")),\n  plot(uranium, x=:Riveros, plotargs..., Guide.title(\"Riveros\"))\n)","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"(Image: )","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"Which rows are zero (close to zero) for the Riveros model?","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"zr= filter(r->r.Riveros<0.01, heinrich)\ndisplay(select(zr, Not([:XPP, :CitZAF, :Origin])))","category":"page"},{"location":"testagainstheinrich/","page":"Compare to Heinrich","title":"Compare to Heinrich","text":"22×10 DataFrame. Omitted printing of 2 columns\n│ Row │ Item  │ Line   │ Z1     │ Z2     │ C1      │ E0    │ Ec    │ TOA   \n  │\n│     │ Int64 │ String │ String │ String │ Float64 │ Int64 │ Int64 │ Float6\n4 │\n├─────┼───────┼────────┼────────┼────────┼─────────┼───────┼───────┼───────\n──┤\n│ 1   │ 136   │ Kα     │ B      │ Zr     │ 0.1789  │ 30000 │ 188   │ 40.0  \n  │\n│ 2   │ 184   │ Kα     │ B      │ W      │ 0.0555  │ 15000 │ 188   │ 40.0  \n  │\n│ 3   │ 172   │ Kα     │ B      │ Ta     │ 0.0564  │ 15000 │ 188   │ 40.0  \n  │\n│ 4   │ 61    │ Kα     │ B      │ Ti     │ 0.284   │ 30000 │ 188   │ 40.0  \n  │\n│ 5   │ 31    │ Kα     │ B      │ Al     │ 0.8278  │ 30000 │ 188   │ 40.0  \n  │\n│ 6   │ 52    │ Kα     │ B      │ Ti     │ 0.1678  │ 30000 │ 188   │ 40.0  \n  │\n│ 7   │ 30    │ Kα     │ B      │ Al     │ 0.8278  │ 25000 │ 188   │ 40.0  \n  │\n⋮\n│ 15  │ 43    │ Kα     │ B      │ Si     │ 0.6857  │ 15000 │ 188   │ 40.0  \n  │\n│ 16  │ 121   │ Kα     │ B      │ Ni     │ 0.0882  │ 15000 │ 188   │ 40.0  \n  │\n│ 17  │ 21    │ Kα     │ B      │ Al     │ 0.4449  │ 12000 │ 188   │ 40.0  \n  │\n│ 18  │ 16    │ Kα     │ B      │ N      │ 0.4348  │ 30000 │ 188   │ 40.0  \n  │\n│ 19  │ 965   │ Lα     │ Cu     │ Au     │ 0.1983  │ 48500 │ 931   │ 52.5  \n  │\n│ 20  │ 311   │ Kα     │ Al     │ Fe     │ 0.1     │ 40000 │ 1559  │ 20.0  \n  │\n│ 21  │ 118   │ Kα     │ B      │ Ni     │ 0.0843  │ 15000 │ 188   │ 40.0  \n  │\n│ 22  │ 112   │ Kα     │ B      │ Ni     │ 0.0578  │ 15000 │ 188   │ 40.0  \n  │","category":"page"},{"location":"testagainstpap/#Testing-Matrix-Correction-Algorithms","page":"Compare To PAP","title":"Testing Matrix Correction Algorithms","text":"","category":"section"},{"location":"testagainstpap/","page":"Compare To PAP","title":"Compare To PAP","text":"Testing matrix correction algorithms XPP and CitZAF against the Pouchou and Pichoir k-ratio database.","category":"page"},{"location":"testagainstpap/","page":"Compare To PAP","title":"Compare To PAP","text":"using CSV\nusing DataFrames\nusing NeXLMatrixCorrection\n\nfunction mapline(elm, index)\n  trss = Dict(0=>kalpha, 2=>kbeta, 12=>lalpha, 31=>lbeta, 72=>malpha, 69=>mbeta)\n  trs=trss[index]\n  return [ brightest(characteristic(elm, trs)) ]\nend\n\npap = DataFrame!(CSV.File(\"papkratios.csv\", header=3, skipto=4))\nxppres, czres = Union{Float64,Missing}[], Union{Float64,Missing}[]\nfor r in eachrow(pap)\n  try\n    a, b = elements[r.A], elements[r.B]\n    e0, θ  = 1.0e3*r.E0, deg2rad(r.TOA)\n    std, unk = pure(a), material(\"Unknown\",Dict(a=>r.WgtFracA, b=>1.0-r.WgtFracA))\n    kk, lines = r.kA, mapline(a, r.Line)\n    algs = zafcorrection(XPP, ReedFluorescence, NullCoating, unk, std, lines, e0)\n    push!(xppres, k(algs..., θ, θ)/kk)\n    algs = zafcorrection(CitZAF, ReedFluorescence, NullCoating, unk, std, lines, e0)\n    push!(czres, k(algs..., θ, θ)/kk)\n  catch\n    push!(xppres, missing)\n    push!(czres, missing)\n  end\nend\ninsertcols!(pap, ncol(pap)+1, :XPP=>xppres)\ninsertcols!(pap, ncol(pap)+1, :CitZAF=>czres)\ndisplay(pap)","category":"page"},{"location":"testagainstpap/","page":"Compare To PAP","title":"Compare To PAP","text":"826×9 DataFrame. Omitted printing of 2 columns\n│ Row │ A     │ Line  │ B     │ E0      │ WgtFracA │ kA      │ TOA     │\n│     │ Int64 │ Int64 │ Int64 │ Float64 │ Float64  │ Float64 │ Float64 │\n├─────┼───────┼───────┼───────┼─────────┼──────────┼─────────┼─────────┤\n│ 1   │ 13    │ 0     │ 26    │ 20.0    │ 0.241    │ 0.124   │ 52.5    │\n│ 2   │ 13    │ 0     │ 26    │ 25.0    │ 0.241    │ 0.098   │ 52.5    │\n│ 3   │ 13    │ 0     │ 26    │ 30.0    │ 0.241    │ 0.083   │ 52.5    │\n│ 4   │ 26    │ 0     │ 13    │ 20.0    │ 0.759    │ 0.736   │ 52.5    │\n│ 5   │ 26    │ 0     │ 13    │ 25.0    │ 0.759    │ 0.742   │ 52.5    │\n│ 6   │ 26    │ 0     │ 13    │ 30.0    │ 0.759    │ 0.748   │ 52.5    │\n│ 7   │ 26    │ 0     │ 16    │ 10.0    │ 0.466    │ 0.406   │ 75.0    │\n⋮\n│ 819 │ 42    │ 12    │ 7     │ 6.0     │ 0.942    │ 0.9023  │ 40.0    │\n│ 820 │ 42    │ 12    │ 7     │ 8.0     │ 0.942    │ 0.9078  │ 40.0    │\n│ 821 │ 42    │ 12    │ 7     │ 10.0    │ 0.942    │ 0.9122  │ 40.0    │\n│ 822 │ 42    │ 12    │ 7     │ 12.0    │ 0.942    │ 0.9163  │ 40.0    │\n│ 823 │ 42    │ 12    │ 7     │ 15.0    │ 0.942    │ 0.922   │ 40.0    │\n│ 824 │ 42    │ 12    │ 7     │ 20.0    │ 0.942    │ 0.9268  │ 40.0    │\n│ 825 │ 42    │ 12    │ 7     │ 25.0    │ 0.942    │ 0.936   │ 40.0    │\n│ 826 │ 42    │ 12    │ 7     │ 30.0    │ 0.942    │ 0.9399  │ 40.0    │","category":"page"},{"location":"testagainstpap/#XPP","page":"Compare To PAP","title":"XPP","text":"","category":"section"},{"location":"testagainstpap/","page":"Compare To PAP","title":"Compare To PAP","text":"Let's visualize this.","category":"page"},{"location":"testagainstpap/","page":"Compare To PAP","title":"Compare To PAP","text":"using Gadfly\nplot(pap, x=:XPP, y=:XPP, Stat.histogram(bincount=50), Geom.bar, Guide.title(\"XPP\"))","category":"page"},{"location":"testagainstpap/","page":"Compare To PAP","title":"Compare To PAP","text":"(Image: )","category":"page"},{"location":"testagainstpap/#CitZAF","page":"Compare To PAP","title":"CitZAF","text":"","category":"section"},{"location":"testagainstpap/","page":"Compare To PAP","title":"Compare To PAP","text":"plot(pap, x=:CitZAF, y=:CitZAF, Stat.histogram(bincount=50), Geom.bar, Guide.title(\"CitZAF\"))","category":"page"},{"location":"testagainstpap/","page":"Compare To PAP","title":"Compare To PAP","text":"(Image: )","category":"page"},{"location":"testagainstpap/#Summary-Statistics","page":"Compare To PAP","title":"Summary Statistics","text":"","category":"section"},{"location":"testagainstpap/","page":"Compare To PAP","title":"Compare To PAP","text":"describe(pap[:,end-1:end], :mean, :std, :min, :q25, :median, :q75, :max)","category":"page"},{"location":"testagainstpap/","page":"Compare To PAP","title":"Compare To PAP","text":"2×8 DataFrame. Omitted printing of 2 columns\n│ Row │ variable │ mean     │ std       │ min      │ q25      │ median   │\n│     │ Symbol   │ Float64  │ Float64   │ Float64  │ Float64  │ Float64  │\n├─────┼──────────┼──────────┼───────────┼──────────┼──────────┼──────────┤\n│ 1   │ XPP      │ 1.00355  │ 0.0264633 │ 0.897411 │ 0.989226 │ 0.999223 │\n│ 2   │ CitZAF   │ 0.990101 │ 0.0477465 │ 0.848773 │ 0.96709  │ 0.995988 │","category":"page"},{"location":"#NeXLMatrixCorrection","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"","category":"section"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"The matrix correction package in the NeXL microanalysis library for Julia.  NeXLMatrixCorrection depends upon NeXLUncertainties and NeXLCore.","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"NeXLMatrixCorrection and some of its dependences are not yet available in the Julia registry so it must be installed using the URL.","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"using Pkg;\r\nPkg.add.([\r\n  \"https://github.com/usnistgov/BoteSalvatICX.jl.git\",\r\n  \"https://github.com/usnistgov/FFAST.jl.git\",\r\n  \"https://github.com/NicholasWMRitchie/NeXLUncertainties.jl.git\",\r\n  \"https://github.com/NicholasWMRitchie/NeXLCore.jl.git\",\r\n  \"https://github.com/NicholasWMRitchie/NeXLMatrixCorrection.jl.git\"\r\n])","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"Currently NeXLMatrixCorrection implements the XPP matrix correction and Reed fluorescence correction algorithms for bulk and coated samples.  The library is designed to make it easy to add additional algorithms.","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"Primarily the algorithms in NeXLMatrixCorrection are designed to take a Vector{NeXLCore.KRatio} and return a NeXLCore.Material.  Since they are intended for both WDS and EDS, the k-ratio can represent one or more characteristic X-ray lines from a single element.  K-ratios compare a measured intensity with the intensity from a reference (standard) material. Typically, these two materials are measured at the same beam energy but multiple beam energy measurements are also supported.","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"The primary method is","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"function quantify(\r\n    iter::Iteration,  # The Iteration object providing algorithmic details\r\n    label::Label,     # A label for the unknown\r\n    measured::Vector{KRatio}, # A complete set of k-ratios (one per element)\r\n    maxIter::Int = 100, # The maximum number of iterations to try before\r\n)::IterationResult","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"which is wrapped as","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"quantify(iter::Iteration, sampleName::String, measured::Vector{KRatio})","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"and","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"quantify(ffr::FilterFitResult,...)\r\nto simplify usage.\r\n\r\n\r\nThe `KRatio` structure is defined in `NeXLCore`.","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"Julia KRatio(     lines::Vector{CharXRay},     unkProps::Dict{Symbol,<:Any},     stdProps::Dict{Symbol,<:Any},     standard::Material,     kratio::AbstractFloat, )","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"Usually it is sufficient to define the `unkProps` and `stdProps` corresponding to the `:BeamEnergy`, the `:TakeOffAngle`\r\nwhich are, of course, in eV and radians.\r\n","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"julia KRatio(   characteristic(n\"F\",ktransitions), # Builds a vector containing all the K shell characteristic x-rays for F","category":"page"},{"location":"#[-n\"F-K-L3\"-],-#-An-alternative-with-only-one-transition","page":"NeXLMatrixCorrection","title":"[ n\"F K-L3\" ], # An alternative with only one transition","text":"","category":"section"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"Dict(:BeamEnergy=>15.0e3, :TakeOffAngle=>deg2rad(40.0)),   Dict(:BeamEnergy=>15.0, :TakeOffAngle=>deg2rad(40.0)),   mat\"CaF2\",  # The standard material   0.324 # The k-ratio )","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"","category":"page"},{"location":"","page":"NeXLMatrixCorrection","title":"NeXLMatrixCorrection","text":"@autodocs Modules = [NeXLMatrixCorrection] ```","category":"page"},{"location":"example/#A-Simple-Example-using-NeXLMatrixCorrection","page":"Example","title":"A Simple Example using NeXLMatrixCorrection","text":"","category":"section"},{"location":"example/","page":"Example","title":"Example","text":"Load the necessary libraries","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"using NeXLMatrixCorrection  # Inplements the algorithms (auto-loads NeXLCore)\nusing DataFrames            # For the table","category":"page"},{"location":"example/#Convert-k-ratios-to-composition.","page":"Example","title":"Convert k-ratios to composition.","text":"","category":"section"},{"location":"example/","page":"Example","title":"Example","text":"Define the measurement conditions","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"lbl = label(\"K458\")  # This labels the measurement\n# Define the measurement properties (:BeamEnery and :TakeOffAngle are required by most matrix correction algorithms)\nunkProps = Dict(:BeamEnergy=>15.0e3, :TakeOffAngle=>deg2rad(40.0), :Coating=>Film(pure(n\"C\"), 7.0e-7))\nstdProps = Dict(:BeamEnergy=>15.0e3, :TakeOffAngle=>deg2rad(40.0), :Coating=>Film(pure(n\"C\"), 15.0e-7))\n# Create a list of the measurement k-ratios.\nkrs = [\n    KRatio([n\"O K-L3\"], unkProps, stdProps, mat\"SiO2\", uv(0.746227,0.0010) ),\n    KRatio([n\"Si K-L3\"], unkProps, stdProps, mat\"SiO2\", uv(0.441263,0.0012) ),\n    KRatio([n\"Zn K-L3\"], unkProps, stdProps, mat\"Zn\", uv(0.027776,0.0002) ),\n    KRatio([n\"Ba L3-M5\"], unkProps, stdProps, mat\"BaCl\", uv(0.447794,0.0020) )\n]","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"4-element Array{KRatio,1}:\n k[SiO2, O K-L3] = 0.74623 ± 0.001\n k[SiO2, Si K-L3] = 0.44126 ± 0.0012\n k[Zn, Zn K-L3] = 0.027776 ± 0.0002\n k[BaCl, Ba L3-M5] = 0.44779 ± 0.002","category":"page"},{"location":"example/#Perform-the-Iteration","page":"Example","title":"Perform the Iteration","text":"","category":"section"},{"location":"example/","page":"Example","title":"Example","text":"# Now perform the iteration on the k-ratios\nres = quantify(lbl, krs)\n# Tabulate the results...\nasa(DataFrame, res, withZAF=true)","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"4×14 DataFrame. Omitted printing of 8 columns\n│ Row │ Label │ Element │ Standard │ Lines    │ Mass Frac. │ Δ[Mass Frac.] \n│\n│     │ Label │ String  │ String   │ String   │ Float64    │ Float64       \n│\n├─────┼───────┼─────────┼──────────┼──────────┼────────────┼───────────────\n┤\n│ 1   │ K458  │ Si      │ SiO2     │ Si K-L3  │ 0.23133    │ 0.00063       \n│\n│ 2   │ K458  │ Ba      │ BaCl     │ Ba L3-M5 │ 0.4218     │ 0.0019        \n│\n│ 3   │ K458  │ O       │ SiO2     │ O K-L3   │ 0.32701    │ 0.00044       \n│\n│ 4   │ K458  │ Zn      │ Zn       │ Zn K-L3  │ 0.030727   │ 0.00022       \n│","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"Now take a slightly different perspective that focuses more on iteration related data.","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"asa(DataFrame, res, withZAF=false)","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"4×8 DataFrame. Omitted printing of 2 columns\n│ Row │ Label │ Element │ Converged │ Iterations │ Mass Frac. │ Δ[Mass Frac\n.] │\n│     │ Label │ String  │ Bool      │ Int64      │ Float64    │ Float64    \n   │\n├─────┼───────┼─────────┼───────────┼────────────┼────────────┼────────────\n───┤\n│ 1   │ K458  │ Si      │ 1         │ 7          │ 0.23133    │ 0.00063    \n   │\n│ 2   │ K458  │ Ba      │ 1         │ 7          │ 0.4218     │ 0.0019     \n   │\n│ 3   │ K458  │ O       │ 1         │ 7          │ 0.32701    │ 0.00044    \n   │\n│ 4   │ K458  │ Zn      │ 1         │ 7          │ 0.030727   │ 0.00022    \n   │","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"Nicholas W. M. Ritchie, 30-Apr-2020","category":"page"}]
}
